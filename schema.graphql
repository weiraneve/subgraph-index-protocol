type Deposit @entity {
  id: ID!
  lender: Bytes!
  amount: BigInt!
  shares: BigInt!
  timestamp: BigInt!
  poolType: String!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type TotalDeposit @entity {
  id: ID!
  totalAmount: BigInt!
  poolType: String!
}

type LiquidityDeposited @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  assets: BigInt! # uint256
  shares: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Drawdown @entity {
  id: ID!
  borrower: Bytes!
  amount: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

type TotalDrawdown @entity {
  id: ID!
  totalAmount: BigInt!
}

type DrawdownMade @entity(immutable: true) {
  id: Bytes!
  borrower: Bytes! # address
  borrowAmount: BigInt! # uint256
  netAmountToBorrower: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PrincipalPayment @entity {
  id: ID!
  borrower: Bytes!
  amount: BigInt!
  lateFeePaid: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
  payer: Bytes! # address
  nextDueDate: BigInt! # uint256
  principalDue: BigInt! # uint256
  unbilledPrincipal: BigInt! # uint256
  principalDuePaid: BigInt! # uint256
  unbilledPrincipalPaid: BigInt! # uint256
  by: Bytes! # address
}

type TotalPrincipalPayment @entity {
  id: ID!
  totalAmount: BigInt!
}

type PrincipalPaymentMade @entity(immutable: true) {
  id: Bytes!
  borrower: Bytes! # address
  payer: Bytes! # address
  amount: BigInt! # uint256
  nextDueDate: BigInt! # uint256
  principalDue: BigInt! # uint256
  unbilledPrincipal: BigInt! # uint256
  principalDuePaid: BigInt! # uint256
  unbilledPrincipalPaid: BigInt! # uint256
  by: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}